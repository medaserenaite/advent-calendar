{"version":3,"sources":["components/Day.js","components/About.js","components/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["Day","props","state","className","id","onClick","this","goBack","bind","value","name","src","alt","text","icon","Component","Calendar","isCalendarVisible","isAboutVisible","aboutCounter","isQButtonVisible","today","year","month","day","todayIsCorrectDay","aboutClick","Date","setState","getFullYear","getMonth","getDate","console","log","data","days","x","setConditionsForDay","ifCheck","isDayVisible","sampleDayClick","colSpan","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2c497680.chunk.js","sourcesContent":["import React from \"react\";\nimport { Component } from 'react'\nimport '../styles/Day.scss'\n// import data from '../data.jsonc'\n// import DateCountdown from \"react-date-countdown-timer\";\n\nexport default class Day extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {            \n        };\n      }\n\n      componentDidMount() {\n          // console.log(this.props.value)\n      }\n\n  render() {\n    return (\n\n      <div className=\"Day\" id=\"day\">\n        <button className=\"backButton\" onClick={this.props.goBack.bind(this)}>back</button>\n        <div className=\"Day__material\">\n          <p className=\"Day__number\">Day {this.props.value}</p>\n          <p className=\"Day__name\">{this.props.name}</p>\n          <img className=\"Day__image\" src=\"https://via.placeholder.com/150\" alt=\"\"/>\n          <p className=\"Day__text\">{this.props.text}</p>\n          <p className=\"Day_icon\">icon of the day: {this.props.icon}</p>\n        </div>\n        <button className=\"backButton\" onClick={this.props.goBack.bind(this)}>back</button>\n</div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Component } from 'react'\nimport \"../styles/About.scss\";\nimport '../styles/Day.scss'\n\n\nexport default class Day extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {            \n        };\n      }\n\n      componentDidMount() {\n\n      }\n\n  render() {\n    return (\n      <div className=\"About\">\n            <button className=\"backButton\" onClick={this.props.goBack.bind(this)}>back</button>\n            <p>Hey, boifren!</p>\n            <p>I made you an advent calendar so you (maybe) have fun while Christmas is slowly sneaking up</p>\n\n            <p>What to expext?</p>\n            <p>Everyday after midnight, a new day will become available for you to click on!<br/>You can click on it right after the clock dings OR in the morning OR whenever you feel like it!</p>\n\n            <p>What's inside the Click?</p>\n            <p>I tried to collect some of my favorite pictures of our time together and remember some my favorite moments with you.<br/>After you read OR not read the whole thing, at the end, I will reveal the icon of the day, which will tell you, which gift you can open that day!</p>\n            <button className=\"backButton\" onClick={this.props.goBack.bind(this)}>back</button>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport { Component } from \"react\";\nimport \"../styles/Calendar.scss\";\nimport Day from \"./Day\";\nimport data from \"../data.json\";\nimport About from \"./About\";\n\nexport default class Calendar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isCalendarVisible: true,\n      isAboutVisible: false,\n      aboutCounter: 0,\n      isQButtonVisible: true,\n      today: 0,\n      year: 0,\n      month: 0,\n      day: 0,\n      todayIsCorrectDay:'',\n    };\n    this.aboutClick = this.aboutClick.bind(this);\n    \n  }\n\n  componentDidMount() {\n    var today = new Date();\n    this.setState({\n      year:today.getFullYear(),\n      month:today.getMonth()+1,\n      day:today.getDate(),\n      today:this.state.today,\n      // value: data.days[x-1].id,\n      // name: data.days[x-1].name,\n      // text: data.days[x-1].text,\n      // icon: data.days[x-1].icon,\n    })\n\n    console.log(data.days[0])\n  }\n\n  sampleDayClick(x) {\n    this.setState({\n      // value: data.days[x-1].id,\n      // name: data.days[x-1].name,\n      // text: data.days[x-1].text,\n      // icon: data.days[x-1].icon,\n    })\n    this.setConditionsForDay();\n\n    this.ifCheck(\n      this.state.x = x,\n      );\n\n  }\n\n  goBack() {\n    this.setState({\n      isCalendarVisible: true,\n      // isDayVisible: false,\n      todayIsCorrectDay: false,\n      isAboutVisible: false,\n      isQButtonVisible: true,\n    });\n  }\n\n  aboutClick() {\n    this.setState({\n      isCalendarVisible: false,\n      isDayVisible: false,\n      isAboutVisible: true,\n      isQButtonVisible: false\n    });\n  }\n\n    setConditionsForDay() {\n    this.setState({\n      isCalendarVisible: false,\n      isDayVisible: true,\n      isQButtonVisible: false,\n    })\n  }\n\n  ifCheck() {\n    //logs\n    console.log(this.state.x)\n    //logs\n    // console.log(\">> \" + data.days[this.state.x].id)\n\n\n    if((this.state.day === this.state.x)) {\n      console.log(\"tru\")\n      // let i = this.state.x; \nconsole.log(\"inside >> \" + data.days[this.state.x].id)\n      this.setState({\n        todayIsCorrectDay: true,\n        value:data.days[this.state.x-1].id,\n        name:data.days[this.state.x-1].name,\n        text:data.days[this.state.x-1].text,\n        icon:data.days[this.state.x-1].icon,\n      })\n    } else {\n      console.log(\"nah\")\n      this.setState({\n        todayIsCorrectDay: false,\n      })\n    }\n  }\n\n\n  render() {\n\n    return (\n      <div className=\"Calendar2\">\n\n      {/* ---shows snow effect on the whole page--- */}\n      <div className=\"snow\" />\n      {/* ----------------------------------------- */}\n\n        {this.state.isQButtonVisible ? (\n          <button className=\"AboutButton\" onClick={this.aboutClick}>\n            ?\n          </button>\n        ) : null}\n\n        {this.state.isAboutVisible ? (\n          <About goBack={this.goBack.bind(this)} />\n        ) : null}\n\n        {/* <div className=\"DateCountdown\">\n          <DateCountdown dateTo=\"December 1, 2019 00:00:00 GMT-05:00\" />\n        </div> */}\n        {this.state.isCalendarVisible ? (\n          <table className=\"calendar-table\">\n            <tbody>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(1)} className=\"calendar-table__day calendar-table--red\" id=\"one\">1</td>\n              <td onClick={() => this.sampleDayClick(2)} className=\"calendar-table__day calendar-table--red\" id=\"two\">2</td>\n              <td onClick={() => this.sampleDayClick(3)} className=\"calendar-table__day calendar-table--red\" id=\"three\">3</td>\n            </tr>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(4)} className=\"calendar-table__day calendar-table--white\">4</td>\n              <td onClick={() => this.sampleDayClick(5)} className=\"calendar-table__day calendar-table--white\">5</td>\n              <td onClick={() => this.sampleDayClick(6)} className=\"calendar-table__day calendar-table--white\">6</td>\n            </tr>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(7)} className=\"calendar-table__day calendar-table--red\">7</td>\n              <td onClick={() => this.sampleDayClick(8)} className=\"calendar-table__day calendar-table--red\">8</td>\n              <td onClick={() => this.sampleDayClick(9)} className=\"calendar-table__day calendar-table--red\">9</td>\n            </tr>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(10)} className=\"calendar-table__day calendar-table--white\">10</td>\n              <td onClick={() => this.sampleDayClick(11)} className=\"calendar-table__day calendar-table--white\">11</td>\n              <td onClick={() => this.sampleDayClick(12)} className=\"calendar-table__day calendar-table--white\">12</td>\n            </tr>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(13)} className=\"calendar-table__day calendar-table--red\">13</td>\n              <td onClick={() => this.sampleDayClick(14)} className=\"calendar-table__day calendar-table--red\">14</td>\n              <td onClick={() => this.sampleDayClick(15)} className=\"calendar-table__day calendar-table--red\">15</td>\n            </tr>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(16)} className=\"calendar-table__day calendar-table--white\">16</td>\n              <td onClick={() => this.sampleDayClick(17)} className=\"calendar-table__day calendar-table--white\">17</td>\n              <td onClick={() => this.sampleDayClick(18)} className=\"calendar-table__day calendar-table--white\">18</td>\n            </tr>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(19)} className=\"calendar-table__day calendar-table--red\">19</td>\n              <td onClick={() => this.sampleDayClick(20)} className=\"calendar-table__day calendar-table--red\">20</td>\n              <td onClick={() => this.sampleDayClick(21)} className=\"calendar-table__day calendar-table--red\">21</td>\n            </tr>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(22)} className=\"calendar-table__day calendar-table--white\">22</td>\n              <td onClick={() => this.sampleDayClick(23)} className=\"calendar-table__day calendar-table--white\"> 23 </td>\n              <td onClick={() => this.sampleDayClick(24)} className=\"calendar-table__day calendar-table--white\">24</td>\n            </tr>\n            <tr className=\"calendar-table__row\">\n              <td onClick={() => this.sampleDayClick(25)} className=\"calendar-table__day calendar-table--red\" colSpan=\"3\">25</td>\n            </tr>\n            </tbody>\n          </table>\n        ) : null}\n\n        {this.state.todayIsCorrectDay ? (\n          <Day\n            value={this.state.value}\n            name={this.state.name}\n            text={this.state.text}\n            icon={this.state.icon}\n            isDayVisible={this.state.isDayVisible}\n            isCalendarVisible={this.state.isCalendarVisible}\n            goBack={this.goBack.bind(this)}\n          />\n        ) : null}      \n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './styles/App.scss';\nimport Calendar from './components/Calendar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calendar/>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}